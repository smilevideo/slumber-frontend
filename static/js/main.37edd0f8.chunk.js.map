{"version":3,"sources":["actions/userActions.js","components/NavBar.js","components/RenderBarChart.js","components/Home.js","components/SignUp.js","components/LogIn.js","components/LogOut.js","components/sleeps/SleepForm.js","helperFunctions.js","components/sleeps/SleepItem.js","components/sleeps/SleepHistory.js","components/dreams/DreamForm.js","components/sleeps/SleepView.js","components/dreams/DreamItem.js","components/dreams/DreamOverview.js","App.js","reducers/userReducer.js","reducers/sleepReducer.js","reducers/dreamReducer.js","reducers/rootReducer.js","index.js"],"names":["API_URL","logIn","userObj","type","payload","getUser","dispatch","token","localStorage","fetch","method","headers","Accepts","then","r","json","data","error","console","log","user","NavBar","className","to","exact","activeClassName","this","props","currentUser","username","React","Component","connect","state","userReducer","CustomizedAxisTick","x","y","width","textAnchor","verticalAnchor","fill","value","RenderBarChart","period","style","textAlign","height","margin","top","right","bottom","left","barCategoryGap","dataKey","interval","tick","name","position","Home","pastSevenDays","today","Date","i","date","subDays","string","format","push","relevantSleeps","sleeps","filter","sleep","areIntervalsOverlapping","start","startOfDay","end","endOfDay","startDate","endDate","timeSleptInMinutes","forEach","dayStart","dayEnd","differenceInMinutes","timeSleptInHours","Math","round","SignUp","handleChange","event","setState","target","handleSubmit","preventDefault","createUser","password","creatingUser","signUpError","onSubmit","placeholder","onChange","userParams","Accept","body","JSON","stringify","setItem","jwt","LogIn","logInUser","loggingIn","logInError","LogOut","handleClick","removeItem","logOutUser","onClick","SleepForm","createSleep","yesterday","start_day","start_time","end_day","end_time","note","rating","creatingSleep","createSleepError","checked","required","max","min","cols","rows","Array","keys","map","num","key","sleepReducer","sleepParams","id","minutesToString","totalMinutes","hours","floor","minutes","SleepItem","duration","dreams","length","SleepHistory","selectedStartDate","selectedEndDate","selectedSleeps","selectedSleepTimeInMinutes","reduce","memo","isBefore","isAfter","timeSleptInSelection","daysInInterval","differenceInCalendarDays","averageTimeSleptPerDay","maxDate","minDate","calendarType","selectRange","toString","split","slice","join","sort","sleepA","sleepB","DreamForm","createDream","sleep_id","sleepId","handleCancel","cancelAddDream","description","mood","creatingDream","createDreamError","colSpan","dreamReducer","dreamParams","dream","SleepView","addDream","parseInt","match","params","find","addingDream","DreamItem","DreamOverview","App","history","path","component","initialState","action","parse","createRootReducer","combineReducers","router","connectRouter","createBrowserHistory","store","createStore","compose","applyMiddleware","thunk","routerMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37edd0f8.chunk.js","sourcesContent":["import { push } from 'connected-react-router';\r\n\r\nconst API_URL = 'https://stark-ocean-11748.herokuapp.com/';\r\n\r\n//sets user object in store\r\nconst logIn = (userObj) => ({\r\n    type: 'LOGIN_USER',\r\n    payload: userObj\r\n});\r\n\r\nexport const logOutUser = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'LOGOUT_USER' });\r\n        dispatch(push('/'));\r\n    }\r\n}\r\n\r\nexport const createUser = (userParams) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'CREATING_USER' });\r\n        return (\r\n            fetch(`${API_URL}/users`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    user: {\r\n                        username: `${userParams.username}`,\r\n                        password: `${userParams.password}`\r\n                    }\r\n                })\r\n            })\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    dispatch({ type: 'CREATE_USER_ERROR' });\r\n                }\r\n                else {\r\n                    localStorage.setItem('token', data.jwt)\r\n                    dispatch(logIn(data.user));\r\n                    dispatch(push('/'));\r\n                }\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nexport const logInUser = (userParams) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'LOGGING_IN' });\r\n        return (\r\n            fetch(`${API_URL}/login`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    user: {\r\n                        username: `${userParams.username}`,\r\n                        password: `${userParams.password}`\r\n                    }\r\n                })\r\n            })\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    dispatch({ type: 'LOGIN_ERROR' })\r\n                }\r\n                else {\r\n                    localStorage.setItem('token', data.jwt);\r\n                    dispatch(logIn(data.user));\r\n                    dispatch(push('/'));\r\n                }\r\n            })\r\n        )\r\n    }\r\n} \r\n\r\nexport const getUser = () => {\r\n    return dispatch => {\r\n        const token = localStorage.token;\r\n\r\n        if (token) {\r\n            return (\r\n                fetch(`${API_URL}/user_data`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Accepts: 'application/json',\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then(r => r.json())\r\n                .then(data => {\r\n                    if (data.error) {\r\n                        console.log('couldn\\'t retrieve user data..');\r\n                    }\r\n                    else {\r\n                        dispatch(logIn(data.user))\r\n                    }\r\n                })\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport const createSleep = (sleepParams) => {\r\n    const token = localStorage.token; \r\n\r\n    return (dispatch) => {\r\n        dispatch({ type: 'CREATING_SLEEP' });\r\n        return (\r\n            fetch(`${API_URL}/sleeps`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    sleep: sleepParams\r\n                })\r\n            })\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    dispatch({ type: 'CREATE_SLEEP_ERROR' });\r\n                }\r\n                else {\r\n                    //refetch user data to include new sleep\r\n                    dispatch(getUser());\r\n                    dispatch({ type: 'CREATED_SLEEP' })\r\n                    dispatch(push(`/sleeps/${data.sleep.id}`));\r\n                }\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nexport const createDream = (dreamParams) => {\r\n    const token = localStorage.token; \r\n\r\n    return (dispatch) => {\r\n        dispatch({ type: 'CREATING_DREAM' });\r\n        return (\r\n            fetch(`${API_URL}/dreams`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    dream: dreamParams\r\n                })\r\n            })\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    dispatch({ type: 'CREATE_DREAM_ERROR' });\r\n                }\r\n                else {\r\n                    /* refetch user data to include new dream */\r\n                    dispatch(getUser());\r\n                    dispatch({ type: 'CREATED_DREAM' })\r\n                }\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass NavBar extends React.Component {\r\n    render() {\r\n        return (<div className='navbar'>\r\n            <NavLink\r\n                to='/'\r\n                exact\r\n                activeClassName='navbar-chosen'\r\n                className='navbar-list-item navbar-logo'\r\n            ><strong>Slumber</strong></NavLink>\r\n\r\n            {this.props.currentUser.username ? \r\n            <>\r\n                <div className='navbar-flex-filler-loggedin' />\r\n                <NavLink\r\n                    to='/logout'\r\n                    exact\r\n                    activeClassName='navbar-chosen'\r\n                    className='navbar-list-item navbar-logout'\r\n                >Log Out</NavLink>\r\n\r\n                <NavLink\r\n                    to='/sleeps'\r\n                    exact\r\n                    activeClassName='navbar-chosen'\r\n                    className='navbar-list-item'\r\n                >Sleep History</NavLink>\r\n\r\n                <NavLink\r\n                    to='/newsleep'\r\n                    exact\r\n                    activeClassName='navbar-chosen'\r\n                    className='navbar-list-item'\r\n                >Record Sleep</NavLink>\r\n\r\n                <NavLink\r\n                    to='/dreams'\r\n                    exact\r\n                    activeClassName='navbar-chosen'\r\n                    className='navbar-list-item'\r\n                >Dream List</NavLink>\r\n            </>\r\n            :\r\n            <>\r\n                <div className='navbar-flex-filler-loggedout' />\r\n                <NavLink\r\n                    to='/signup'\r\n                    exact\r\n                    activeClassName='navbar-chosen'\r\n                    className='navbar-list-item'\r\n                >Sign Up</NavLink>\r\n                \r\n                <NavLink\r\n                    to='/login'\r\n                    exact\r\n                    activeClassName='navbar-chosen'\r\n                    className='navbar-list-item navbar-login'\r\n                >Log In</NavLink>\r\n            </>}\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.userReducer.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(NavBar);","import React from 'react';\r\nimport {\r\n    BarChart, \r\n    Bar, \r\n    XAxis, \r\n    YAxis, \r\n    Tooltip,\r\n    LabelList, \r\n    Text\r\n} from 'recharts';\r\n\r\nconst CustomizedAxisTick = props => {\r\n    const { x, y, payload } = props;\r\n          \r\n    return (\r\n        <Text \r\n            x={x}\r\n            y={y}\r\n            width={75} \r\n            textAnchor=\"middle\" \r\n            verticalAnchor=\"start\"\r\n            fill='lightblue'   \r\n        >\r\n            {payload.value}\r\n        </Text>\r\n    ) \r\n};\r\n\r\nconst RenderBarChart = props => {\r\n    const { data, period } = props;\r\n\r\n    return (<div className='chart'>\r\n        <p style={{textAlign: \"center\"}}><strong>{`Hours Slept in the Past ${period}`}</strong></p>\r\n\r\n        <BarChart \r\n            width={750} height={450}\r\n            data={data} \r\n            margin={{ top: 0, right: 5, bottom: 5, left: 5 }}\r\n            barCategoryGap='0%'\r\n        >\r\n            <XAxis dataKey=\"string\" interval={0} tick={<CustomizedAxisTick />} height={100} />\r\n            <YAxis tick={{fill: 'lightblue'}} />\r\n            <Tooltip />\r\n            <Bar fill='#4d4aa3' name='Hours Slept' dataKey=\"timeSleptInHours\">\r\n                <LabelList dataKey=\"timeSleptInHours\" position=\"top\" fill='lightblue' />\r\n            </Bar>\r\n        </BarChart>\r\n    </div>)\r\n}\r\n\r\nexport default RenderBarChart;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    subDays, \r\n    format, \r\n    startOfDay, \r\n    endOfDay, \r\n    areIntervalsOverlapping,\r\n    differenceInMinutes\r\n} from 'date-fns';\r\nimport RenderBarChart from './RenderBarChart';\r\n\r\nclass Home extends React.Component {\r\n    constructor() {\r\n        super();\r\n        \r\n        //arrays of last 7 days as objects containing both JS date and string representations\r\n        this.pastSevenDays = [];\r\n        const today = new Date();\r\n        for(let i = 0; i < 7; i++) {\r\n            const date = subDays(today, 7 - i);\r\n            const string = format(date, 'eeee, MMMM do')\r\n            this.pastSevenDays.push({ date, string });\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (this.props.currentUser.username) {\r\n            //find time slept in each of the last 7 days            \r\n            const relevantSleeps = this.props.currentUser.sleeps.filter(sleep => {\r\n                return areIntervalsOverlapping(\r\n                    { start: startOfDay(this.pastSevenDays[0].date), end: endOfDay(this.pastSevenDays[6].date) },\r\n                    { start: sleep.startDate, end: sleep.endDate }\r\n                )\r\n            })\r\n\r\n            for(let i = 0; i < 7; i++) {\r\n                this.pastSevenDays[i].timeSleptInMinutes = 0;\r\n\r\n                relevantSleeps.forEach(sleep => {\r\n                    const dayStart = startOfDay(this.pastSevenDays[i].date);\r\n                    const dayEnd = endOfDay(this.pastSevenDays[i].date);\r\n                    if (areIntervalsOverlapping(\r\n                        { start: dayStart, end: dayEnd },\r\n                        { start: sleep.startDate, end: sleep.endDate }\r\n                    )) {\r\n                        if (sleep.startDate < dayStart) {\r\n                            if (sleep.endDate > dayEnd) {\r\n                                this.pastSevenDays[i].timeSleptInMinutes += 1440;\r\n                            }\r\n                            else {\r\n                                this.pastSevenDays[i].timeSleptInMinutes += differenceInMinutes(sleep.endDate, dayStart);\r\n                            }\r\n                        }\r\n                        else if (sleep.endDate > dayEnd) {\r\n                            this.pastSevenDays[i].timeSleptInMinutes += differenceInMinutes(dayEnd, sleep.startDate);\r\n                        }\r\n                        else {\r\n                            this.pastSevenDays[i].timeSleptInMinutes += differenceInMinutes(sleep.endDate, sleep.startDate);\r\n                        }\r\n                    }\r\n                })\r\n                \r\n                this.pastSevenDays[i].timeSleptInHours = Math.round((this.pastSevenDays[i].timeSleptInMinutes / 60) * 10) / 10;\r\n            }\r\n        }\r\n\r\n        return (<div className='main'>\r\n            <h2 className='header'>Home</h2>\r\n            {\r\n                this.props.currentUser.username \r\n                ?\r\n                <> \r\n                <p>Welcome, {this.props.currentUser.username}.</p>\r\n                <br />\r\n                <RenderBarChart period='Week' data={this.pastSevenDays} />\r\n                </>\r\n                :\r\n                <p>Welcome, please sign up or log in.</p>\r\n            }\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.userReducer.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Home);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createUser } from '../actions/userActions';\r\n\r\nclass SignUp extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.props.createUser(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (<div className='main'>\r\n            <h2 className='header'>Create an Account</h2>\r\n\r\n            {this.props.creatingUser ? <p>Creating User..</p> : null}\r\n            {this.props.signUpError ? <p>Username already taken, try again.</p> : null}\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Username</th>\r\n                            <th>Password</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <input \r\n                                    type='text'\r\n                                    name='username'\r\n                                    placeholder='Username'\r\n                                    value={this.state.username}\r\n                                    onChange={this.handleChange}\r\n                                /> \r\n                            </td>\r\n                            <td>\r\n                                <input\r\n                                    type='password'\r\n                                    name='password'\r\n                                    placeholder='Password'\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <input type='submit' value='Create User'/> \r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        </div>)\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        creatingUser: state.userReducer.creatingUser,\r\n        signUpError: state.userReducer.signUpError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    createUser: userParams => dispatch(createUser(userParams))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logInUser } from '../actions/userActions';\r\n\r\nclass LogIn extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.props.logInUser(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (<div className='main'>\r\n            <h2 className='header'>Login</h2>\r\n            \r\n            {this.props.loggingIn ? <p>Logging In..</p> : null}\r\n            {this.props.logInError ? <p>Invalid username or password, try again.</p> : null}\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Username</th>\r\n                            <th>Password</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <input \r\n                                    type='text'\r\n                                    name='username'\r\n                                    placeholder='Username'\r\n                                    value={this.state.username}\r\n                                    onChange={this.handleChange}\r\n                                /> \r\n                            </td>\r\n                            <td>\r\n                                <input\r\n                                    type='password'\r\n                                    name='password'\r\n                                    placeholder='Password'\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <input type='submit' value='Log In'/> \r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        </div>)\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggingIn: state.userReducer.loggingIn,\r\n        logInError: state.userReducer.logInError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logInUser: userParams => dispatch(logInUser(userParams))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logOutUser } from '../actions/userActions';\r\n\r\nclass LogOut extends React.Component {\r\n    handleClick = () => {\r\n        localStorage.removeItem('token');\r\n        this.props.logOutUser();\r\n    }\r\n\r\n    render() {\r\n        return (<div className='main'>\r\n            <h2 className='header'>Log Out</h2>\r\n            <p>Are you sure you wish to log out?</p>\r\n            <button onClick={this.handleClick}>Log Out</button>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logOutUser: () => dispatch(logOutUser())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(LogOut);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createSleep } from '../../actions/userActions';\r\nimport { \r\n    format,\r\n    subDays\r\n} from 'date-fns';\r\n\r\nclass SleepForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        //set today and yesterday's dates as formatted strings\r\n        this.today = format(new Date(), 'yyyy-MM-dd');\r\n        this.yesterday = format(subDays(new Date(), 1), 'yyyy-MM-dd');\r\n\r\n        this.state = {\r\n            start_day: this.yesterday,\r\n            start_time: '',\r\n            end_day: this.today,\r\n            end_time: '',\r\n            note: '',\r\n            rating: '',\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.props.createSleep(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (<div className='main'>\r\n            <h2 className='header'>New Sleep Entry</h2>\r\n\r\n            {this.props.creatingSleep ? <p>Adding Sleep..</p> : null}\r\n            {this.props.createSleepError ? <p>Error, try again.</p> : null}\r\n\r\n            <form className='sleep-form' onSubmit={this.handleSubmit}>\r\n                <table className='dates-input-table'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Start Day</th>\r\n                            <th>Start Time (24hr)</th>\r\n                            <th>End Day</th>\r\n                            <th>End Time (24hr)</th>\r\n                        </tr>\r\n                        <tr>\r\n                            {/*** START DAY INPUT ***/}\r\n                            <td className='dayForm'>\r\n                                <label className='form-radio'>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='start_day'\r\n                                        value={this.today}\r\n                                        checked={this.state.start_day === this.today}\r\n                                        onChange={this.handleChange}\r\n                                        className='form-input-radio'\r\n                                    />\r\n                                    Today\r\n                                </label>\r\n                                <label className='form-radio'>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='start_day'\r\n                                        value={this.yesterday}\r\n                                        checked={this.state.start_day === this.yesterday}\r\n                                        onChange={this.handleChange}\r\n                                        className='form-input-radio'\r\n                                    />\r\n                                    Yesterday\r\n                                </label>\r\n                                <label className='form-radio'>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='start_day'\r\n                                        value=''\r\n                                        checked={\r\n                                            (this.state.start_day !== this.today) &&\r\n                                            (this.state.start_day !== this.yesterday)\r\n                                        }\r\n                                        onChange={this.handleChange}\r\n                                        className='form-input-radio'\r\n                                    />\r\n                                    Other\r\n                                </label>\r\n                                <br />\r\n                                <input className='form-date'\r\n                                    required\r\n                                    type='date'\r\n                                    name='start_day'\r\n                                    max={this.today}\r\n                                    value={this.state.start_day}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                                <input\r\n                                    required\r\n                                    type='time'\r\n                                    name='start_time'\r\n                                    placeholder='Start Time'\r\n                                    value={this.state.start_time}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </td>\r\n\r\n                            {/*** END DAY INPUT ***/}\r\n                            <td className='dayForm'>\r\n                                <label className='form-radio'>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='end_day'\r\n                                        value={this.today}\r\n                                        checked={this.state.end_day === this.today}\r\n                                        onChange={this.handleChange}\r\n                                        className='form-input-radio'\r\n                                    />\r\n                                    Today\r\n                                </label>\r\n                                <label className='form-radio'>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='end_day'\r\n                                        value={this.yesterday}\r\n                                        checked={this.state.end_day === this.yesterday}\r\n                                        onChange={this.handleChange}\r\n                                        className='form-input-radio'\r\n                                    />\r\n                                    Yesterday\r\n                                </label>\r\n                                <label className='form-radio'>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='end_day'\r\n                                        value=''\r\n                                        checked={\r\n                                            (this.state.end_day !== this.today) &&\r\n                                            (this.state.end_day !== this.yesterday)\r\n                                        }\r\n                                        onChange={this.handleChange}\r\n                                        className='form-input-radio'\r\n                                    />\r\n                                    Other\r\n                                </label>\r\n                                <input className='form-date'\r\n                                    required\r\n                                    type='date'\r\n                                    name='end_day'\r\n                                    min={this.state.start_day}\r\n                                    max={this.today}\r\n                                    value={this.state.end_day}\r\n                                    onChange={this.handleChange}\r\n                                /> \r\n                            </td>\r\n                            <td>\r\n                                <input\r\n                                    required\r\n                                    type='time'\r\n                                    name='end_time'\r\n                                    placeholder='End Time'\r\n                                    min={this.state.end_day === this.state.start_day ? this.state.start_time : null}\r\n                                    value={this.state.end_time}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <br />\r\n                \r\n                <label><strong>Note (optional):</strong></label><br />\r\n                <textarea\r\n                    name='note'\r\n                    placeholder='(Enter note here)'\r\n                    cols='50'\r\n                    rows='8'\r\n                    value={this.state.note}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br /><br />\r\n                \r\n                {/*** RATING INPUT ***/}\r\n                <label><strong>Rating (optional):</strong></label><br />\r\n                <table className='rating-input-table'>\r\n                    <tbody>\r\n                        <tr>\r\n                            {/* creates an array of 0 to 4, then produces an array of 1 to 5, then returns the desired JSX for each number */}\r\n                            {[...Array(5).keys()].map(num => num + 1).map(num => {\r\n                                return (<td key={num}>{num}</td>)\r\n                            })}\r\n                            <td>None</td>\r\n                        </tr>\r\n                        <tr>\r\n                            {[...Array(5).keys()].map(num => num + 1).map(num => {\r\n                                return (<td key={num}>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='rating'\r\n                                        value={num}\r\n                                        checked={this.state.rating === `${num}`}\r\n                                        onChange={this.handleChange}\r\n                                        className='form-input-radio'\r\n                                    />\r\n                                </td>)\r\n                            })}\r\n                            <td>\r\n                                <input\r\n                                    type='radio'\r\n                                    name='rating'\r\n                                    value=''\r\n                                    checked={!this.state.rating}\r\n                                    onChange={this.handleChange}\r\n                                    className='form-input-radio'\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <br /><br />\r\n                \r\n                <input type='submit' value='Add Sleep'/> \r\n            </form>\r\n        </div>)\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        creatingSleep: state.sleepReducer.creatingSleep,\r\n        createSleepError: state.sleepReducer.createSleepError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    createSleep: sleepParams => dispatch(createSleep(sleepParams))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SleepForm);","export const minutesToString = (totalMinutes) => {\r\n    const hours = Math.floor(totalMinutes / 60);\r\n    const minutes = Math.floor(totalMinutes % 60);\r\n    return (\r\n        `${hours} ${hours === 1 ? 'hour' : 'hours'} and ${minutes} ${minutes === 1 ? 'minute' : 'minutes'}`\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n\r\nconst SleepItem = (props) => {\r\n    return <li>\r\n        <div>\r\n            <Link to={`sleeps/${props.sleep.id}`}>\r\n                {`${format(props.sleep.startDate, 'eeee, MMMM do yyyy')}, ${props.sleep.start_time} to \r\n                ${format(props.sleep.endDate, 'eeee, MMMM do yyyy')}, ${props.sleep.end_time}:`}\r\n            </Link>\r\n        </div>\r\n        <div><strong>Sleep duration: </strong>{props.sleep.duration}</div>\r\n        <br />\r\n        <div className='sleep-note'><strong>Note(s): </strong><br />{props.sleep.note ? props.sleep.note : 'N/A'}</div>\r\n        <br />\r\n        <div><strong>Rating: </strong>{props.sleep.rating ? props.sleep.rating : 'N/A'}</div>\r\n        <br />\r\n        <div><strong>Dream(s) recorded: </strong>{props.sleep.dreams.length > 0 ? 'Yes' : 'No'}</div>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n    </li>\r\n}\r\n\r\nexport default SleepItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Calendar from 'react-calendar';\r\nimport { \r\n    areIntervalsOverlapping, \r\n    format, \r\n    differenceInMinutes,\r\n    isBefore,\r\n    isAfter,\r\n    differenceInCalendarDays,\r\n    subDays\r\n} from 'date-fns';\r\nimport { minutesToString } from '../../helperFunctions';\r\nimport SleepItem from './SleepItem';\r\n\r\nclass SleepHistory extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedStartDate: subDays(new Date(), 7),\r\n            selectedEndDate: subDays(new Date(), 1)\r\n        };\r\n    }\r\n\r\n    onChange = (date) => {\r\n        this.setState({ \r\n            selectedStartDate: date[0],\r\n            selectedEndDate: date[1]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.sleeps) {\r\n            //set array of sleeps with any time in the selected range\r\n            this.selectedSleeps = this.props.sleeps.filter(sleep => {\r\n                return (\r\n                    areIntervalsOverlapping(\r\n                        { start: sleep.startDate, end: sleep.endDate },\r\n                        { start: this.state.selectedStartDate, end: this.state.selectedEndDate }\r\n                    )\r\n                );\r\n            });\r\n\r\n            //calculate total time slept in the selected range\r\n            const selectedSleepTimeInMinutes = this.selectedSleeps.reduce((memo, sleep) => {\r\n                if (isBefore(sleep.startDate, this.state.selectedStartDate)) {\r\n                    if (isAfter(sleep.endDate, this.state.selectedEndDate)) {\r\n                        return memo + differenceInMinutes(this.state.selectedEndDate, this.state.selectedStartDate) + 1;\r\n                    }\r\n                    \r\n                    else {\r\n                        return memo + differenceInMinutes(sleep.endDate, this.state.selectedStartDate);\r\n                    }\r\n                }\r\n                else if (isAfter(sleep.endDate, this.state.selectedEndDate)) {\r\n                    return memo + differenceInMinutes(this.state.selectedEndDate, sleep.startDate) + 1;\r\n                }\r\n                else {\r\n                    return memo + differenceInMinutes(sleep.endDate, sleep.startDate)\r\n                }\r\n            }, 0)\r\n            this.timeSleptInSelection = minutesToString(selectedSleepTimeInMinutes);\r\n\r\n            //calculate average time slept per day\r\n            const daysInInterval = differenceInCalendarDays(this.state.selectedEndDate, this.state.selectedStartDate) + 1;\r\n            this.averageTimeSleptPerDay = minutesToString(Math.floor(selectedSleepTimeInMinutes / daysInInterval));\r\n        }\r\n\r\n        return (<div className='main'>\r\n            <h2 className='header'>Sleep Overview</h2>\r\n            <p style={{textAlign: 'center'}}>Select a date range:</p>\r\n            <Calendar\r\n                onChange={this.onChange}\r\n                value={[this.state.selectedStartDate, this.state.selectedEndDate]}\r\n                maxDate={new Date()}\r\n                minDate={new Date(1900, 1, 1)}\r\n                calendarType='US'\r\n                selectRange={true}\r\n            />\r\n\r\n            <h3 style={{textAlign: 'center'}}>{\r\n                //check if start and end of range are the same day\r\n                this.state.selectedStartDate.toString().split(' ').slice(1, 4).join(' ')\r\n                    ===\r\n                    this.state.selectedEndDate.toString().split(' ').slice(1, 4).join(' ')\r\n                ?\r\n                `${format(this.state.selectedStartDate, 'eeee, MMMM do yyyy')}:`\r\n                :\r\n                `${format(this.state.selectedStartDate, 'eeee, MMMM do yyyy')}\r\n                    to \r\n                    ${format(this.state.selectedEndDate, 'eeee, MMMM do yyyy')}:`   \r\n            }</h3>\r\n            \r\n            {this.selectedSleeps ?\r\n            <>\r\n                {this.selectedSleeps.length > 0 \r\n                ?\r\n                <>\r\n                    <p style={{textAlign: 'center'}}>Average time slept per day: {this.averageTimeSleptPerDay}</p>\r\n                    <p style={{textAlign: 'center'}}>Total time slept: {this.timeSleptInSelection}</p>\r\n                    <br />\r\n                    <hr className='sleep-list-begin'/>\r\n                    <h4>List of sleep sessions during this period:</h4>\r\n                    <ol className='sleepList'>\r\n                        {/* sorts selected sleeps by start date and then renders a SleepItem component for each */}\r\n                        {this.selectedSleeps\r\n                            .sort((sleepA, sleepB) => {\r\n                                if (isBefore(sleepA.startDate,sleepB.startDate)) {\r\n                                    return -1\r\n                                }\r\n                                else {\r\n                                    return 1\r\n                                }\r\n                            })\r\n                            .map(sleep => <SleepItem sleep={sleep} key={sleep.id} />)\r\n                        }\r\n                    </ol>\r\n                </>\r\n                :\r\n                <p>No sleep recorded for this period.</p>\r\n                }\r\n            </>\r\n            :\r\n            null\r\n            }  \r\n        </div>)\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sleeps: state.userReducer.currentUser.sleeps\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SleepHistory);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createDream } from '../../actions/userActions';\r\n\r\nclass DreamForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            description: '',\r\n            mood: '0'\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.props.createDream({\r\n            ...this.state,\r\n            sleep_id: this.props.sleepId\r\n        });\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.props.cancelAddDream();\r\n    }\r\n\r\n    render() {\r\n        return (<div className='dream-form'>\r\n            <h3 className='dream-form-header'>New Dream Entry</h3>\r\n\r\n            <hr style={{margin: '0px -5px 10px -5px'}}/>\r\n\r\n            {this.props.creatingDream ? <p>Adding Dream..</p> : null}\r\n            {this.props.createDreamError ? <p>Error, try again.</p> : null}\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label><strong>Description:</strong></label><br />\r\n                <textarea\r\n                    required\r\n                    name='description'\r\n                    cols='50'\r\n                    rows='8'\r\n                    value={this.state.description}\r\n                    onChange={this.handleChange}\r\n                /><br /><br />\r\n\r\n                \r\n                <table className='mood-input-table'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td colSpan='7'>Downer {'<--->'} Upper</td>\r\n                        </tr>\r\n                        <tr>\r\n                            {/* creates an array of 0 to 7, then produces an array of -3 to 3, then returns the desired JSX for each number */}\r\n                            {[...Array(7).keys()].map(num => num - 3).map(num => {\r\n                                return (<td key={num}>{num}</td>)\r\n                            })}\r\n                        </tr>\r\n                        <tr>\r\n                            {[...Array(7).keys()].map(num => num - 3).map(num => {\r\n                                return (<td key={num}>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='mood'\r\n                                        value={num}\r\n                                        checked={this.state.mood === `${num}`}\r\n                                        onChange={this.handleChange}\r\n                                        className='form-input-radio'\r\n                                    />\r\n                                </td>)\r\n                            })}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <br />\r\n\r\n                <div className='dream-form-buttons'>\r\n                    <input type='submit' value='Add Dream'/> \r\n                    <button type='button' onClick={this.handleCancel}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        </div>)\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        creatingDream: state.dreamReducer.creatingDream,\r\n        createDreamError: state.dreamReducer.createDreamError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    createDream: dreamParams => dispatch(createDream(dreamParams)),\r\n    cancelAddDream: () => dispatch({ type: 'CANCEL_ADD_DREAM' })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DreamForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DreamForm from '../dreams/DreamForm';\r\nimport { format } from 'date-fns';\r\n\r\nclass SleepView extends React.Component {\r\n    handleClick = event => {\r\n        this.props.addDream();\r\n    }\r\n\r\n    render() {\r\n        const id = parseInt(this.props.match.params.sleepId, 10);\r\n        if (this.props.sleeps) {\r\n            this.sleep = this.props.sleeps.find(sleep => {\r\n                return sleep.id === id;\r\n            })\r\n        }\r\n\r\n        return (<div className='main'>\r\n            {typeof(this.sleep) !== 'undefined' ? \r\n                <>\r\n                <h2 className='header'>Sleep from {`${format(this.sleep.startDate, 'eeee, MMMM do yyyy')}, ${this.sleep.start_time} to \r\n                    ${format(this.sleep.endDate, 'eeee, MMMM do yyyy')}, ${this.sleep.end_time}:`}</h2>\r\n                \r\n                <div className='sleep-view'>\r\n                    <div className='sleep-view-sleep-info'>\r\n                        <p><strong>Total duration: </strong>{this.sleep.duration}</p>\r\n                        <p>{`Rating: ${this.sleep.rating ? this.sleep.rating : 'N/A'}`}</p>\r\n                        <p><span>Note: </span>{this.sleep.note ? this.sleep.note : 'N/A'}</p>\r\n                    </div>\r\n\r\n                    <div className='sleep-view-dream-list'>\r\n                        <h3>Dreams: </h3>\r\n                        {this.props.addingDream ? <DreamForm sleepId={this.sleep.id} /> : <button onClick={this.handleClick}>Record Dream</button>}\r\n                        <ol>\r\n                            {this.sleep.dreams.map(dream => {\r\n                                return (<li key={dream.id}>\r\n                                    <p className='dream-description'>{dream.description}</p>\r\n                                    {typeof(dream.mood) === 'number' ? <p>Mood: {dream.mood}</p> : null}\r\n                                </li>)\r\n                            })}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                </>\r\n            : null} \r\n        </div>)\r\n        \r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sleeps: state.userReducer.currentUser.sleeps,\r\n        addingDream: state.dreamReducer.addingDream\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addDream: () => dispatch({type: 'ADDING_DREAM' })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SleepView);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n\r\nconst DreamItem = (props) => {\r\n    return (<li>\r\n        <p>\r\n            {'Day of associated sleep session: '}\r\n            <Link to={`sleeps/${props.sleep.id}`}>\r\n            {format(props.sleep.startDate, 'eeee, MMMM do yyyy')}\r\n            </Link>\r\n        </p>\r\n        <p className='dream-description'>\r\n            <strong>Description:</strong><br />\r\n            {props.dream.description}\r\n        </p>\r\n        <p>\r\n            <strong>Mood: </strong>\r\n            {props.dream.mood}\r\n        </p>\r\n        <hr />\r\n    </li>)\r\n}\r\n\r\nexport default DreamItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DreamItem from './DreamItem';\r\n\r\nclass DreamOverview extends React.Component {\r\n    render() {\r\n        return (<div className='main'>\r\n            <h2 className='header'>Dream Overview</h2>\r\n            {this.props.sleeps ?\r\n            <ol className='dream-list'>\r\n                {this.props.sleeps.map(sleep => {\r\n                    return <div key={sleep.id}>\r\n                        {sleep.dreams.map(dream => <DreamItem dream={dream} sleep={sleep} key={dream.id} />)}\r\n                    </div>\r\n                })}\r\n            </ol> :\r\n            null\r\n            }\r\n        </div>)\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sleeps: state.userReducer.currentUser.sleeps\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DreamOverview);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { history } from './index.js';\nimport { connect } from 'react-redux';\nimport { getUser } from './actions/userActions';\n\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport SignUp from './components/SignUp';\nimport LogIn from './components/LogIn';\nimport LogOut from './components/LogOut';\n\nimport SleepForm from './components/sleeps/SleepForm';\nimport SleepHistory from './components/sleeps/SleepHistory';\nimport SleepView from './components/sleeps/SleepView';\nimport DreamOverview from './components/dreams/DreamOverview.js';\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getUser();\n  }\n\n  render() {\n    return (\n      <ConnectedRouter history={history}>\n        <>\n          {/* <Logo /> */}\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/sleeps' component={SleepHistory} />\n            <Route exact path='/sleeps/:sleepId' component={SleepView} />\n            <Route exact path='/dreams' component={DreamOverview} />\n            <Route exact path='/newsleep' component={SleepForm} />\n            <Route exact path='/logout' component={LogOut} />\n            <Route exact path='/signup' component={SignUp} />\n            <Route exact path='/login' component={LogIn} />\n          </Switch>\n        </>\n      </ConnectedRouter>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getUser: () => dispatch(getUser())\n})\n\nexport default connect(null, mapDispatchToProps)(App);","import { parse, differenceInMinutes } from 'date-fns';\r\n\r\nconst initialState = {\r\n    currentUser: {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATING_USER':\r\n            return {\r\n                ...state,\r\n                creatingUser: true,\r\n                signUpError: false\r\n            }\r\n\r\n        case 'CREATE_USER_ERROR':\r\n            return {\r\n                ...state,\r\n                creatingUser: false,\r\n                signUpError: true\r\n            }\r\n\r\n        case 'LOGGING_IN':\r\n            return {\r\n                ...state,\r\n                loggingIn: true,\r\n                logInError: false\r\n            }\r\n\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                loggingIn: false,\r\n                logInError: true\r\n            }\r\n            \r\n        case 'LOGIN_USER':\r\n            return {\r\n                ...state,\r\n                //Add duration and js date variable versions of begin and end dates as attributes to sleeps array\r\n                currentUser: {\r\n                    ...action.payload,\r\n                    sleeps: [\r\n                        ...action.payload.sleeps.map(sleep => {\r\n                            const startDate = parse(`${sleep.start_day} ${sleep.start_time}`, 'yyyy-MM-dd HH:mm', new Date())\r\n                            const endDate = parse(`${sleep.end_day} ${sleep.end_time}`, 'yyyy-MM-dd HH:mm', new Date())\r\n                            \r\n                            return ({\r\n                                ...sleep,\r\n                                startDate,\r\n                                endDate,\r\n                                duration: `${Math.floor(differenceInMinutes(endDate, startDate) / 60)}h \r\n                                    ${differenceInMinutes(endDate, startDate) % 60}m`\r\n                            })\r\n                        })\r\n                    ]\r\n                },\r\n                creatingUser: false,\r\n                loggingIn: false,\r\n                signUpError: false,\r\n                logInError: false\r\n            }\r\n\r\n        case 'LOGOUT_USER':\r\n            return {\r\n                ...state,\r\n                currentUser: {}\r\n            }\r\n\r\n            \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    creatingSleep: false,\r\n    createSleepError: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATING_SLEEP':\r\n            return {\r\n                ...state,\r\n                creatingSleep: true,\r\n                createSleepError: false\r\n            }\r\n\r\n        case 'CREATE_SLEEP_ERROR':\r\n            return {\r\n                ...state,\r\n                creatingSleep: false,\r\n                createSleepError: true\r\n            }\r\n\r\n        case 'CREATED_SLEEP':\r\n            return {\r\n                ...state,\r\n                creatingSleep: false,\r\n                createSleepError: false\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    addingDream: false,\r\n    creatingDream: false,\r\n    createDreamError: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADDING_DREAM':\r\n            return {\r\n                ...state,\r\n                addingDream: true\r\n            }\r\n\r\n        case 'CANCEL_ADD_DREAM':\r\n            return {\r\n                ...state,\r\n                addingDream: false\r\n            }\r\n\r\n        case 'CREATING_DREAM':\r\n            return {\r\n                ...state,\r\n                creatingDream: true,\r\n                createDreamError: false\r\n            }\r\n\r\n        case 'CREATE_DREAM_ERROR':\r\n            return {\r\n                ...state,\r\n                creatingDream: false,\r\n                createDreamError: true\r\n            }\r\n\r\n        case 'CREATED_DREAM':\r\n            return {\r\n                ...state,\r\n                creatingDream: false,\r\n                createDreamError: false,\r\n                addingDream: false\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport userReducer from './userReducer';\r\nimport sleepReducer from './sleepReducer';\r\nimport dreamReducer from './dreamReducer';\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    userReducer,\r\n    sleepReducer,\r\n    dreamReducer\r\n});\r\n\r\nexport default createRootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/NavBar.css';\nimport './css/Home.css';\nimport './css/SleepHistory.css';\nimport './css/SleepForm.css';\nimport './css/DreamForm.css';\nimport './css/SleepView.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport createRootReducer from './reducers/rootReducer';\n\nexport const history = createBrowserHistory();\n\nconst store = createStore(createRootReducer(history), compose(\n    applyMiddleware(\n        thunk,\n        routerMiddleware(history)\n    ),\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}